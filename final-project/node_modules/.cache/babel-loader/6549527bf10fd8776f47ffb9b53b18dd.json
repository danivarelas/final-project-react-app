{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Register/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport sha256 from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\nimport './Register.scss';\nimport emailjs from 'emailjs-com';\n\nconst Register = () => {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [invalidUsername, setInvalidUsername] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [invalidPassword, setInvalidPassword] = useState(false);\n  useEffect(() => {}, [invalidUsername, invalidEmail, invalidPassword]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setInvalidPassword(false);\n      const user = {\n        name,\n        lastName,\n        email,\n        username,\n        password,\n        countryCode,\n        phoneNumber\n      };\n      const userUsername = await checkUsername();\n      const userEmail = await checkEmail();\n\n      if (userUsername.data.username || userEmail.data.email) {\n        userUsername.data.username ? setInvalidUsername(true) : setInvalidUsername(false);\n        userEmail.data.email ? setInvalidEmail(true) : setInvalidEmail(false);\n      } else {\n        Axios.post(`http://localhost:8081/api/v1/user`, user).then(res => {\n          var templateParams = {\n            subject: 'Welcome',\n            email: 'daniel.varela.serrano@gmail.com',\n            name: 'Daniel',\n            from: 'PowerBank'\n          };\n          emailjs.send('gmail', 'template_8HJ8XF0v', templateParams, 'user_ykN9aw27EcEhXClqMft4o');\n          history.push(\"/login\");\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    } else {\n      setInvalidPassword(true);\n    }\n  };\n\n  const checkUsername = async () => {\n    let res = await Axios.get(`http://localhost:8081/api/v1/user/byUsername/${username}`);\n    return res;\n  };\n\n  const checkEmail = async () => {\n    let res = await Axios.get(`http://localhost:8081/api/v1/user/byEmail/${email}`);\n    return res;\n  };\n\n  const handleName = event => {\n    setName(event.target.value);\n  };\n\n  const handleLastname = event => {\n    setLastName(event.target.value);\n  };\n\n  const handleUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const handleCode = event => {\n    setCountryCode(event.target.value);\n  };\n\n  const handlePhone = event => {\n    setPhoneNumber(event.target.value);\n  };\n\n  const handlePassword = event => {\n    if (event.target.value === \"\") {\n      setInvalidPassword(false);\n      setPassword(\"\");\n    } else {\n      let hash = Base64.stringify(sha256(event.target.value));\n\n      if (hash !== confirmPassword) {\n        setInvalidPassword(true);\n      } else {\n        setInvalidPassword(false);\n      }\n\n      setPassword(hash);\n    }\n  };\n\n  const handleConfirmPassword = event => {\n    if (event.target.value === \"\") {\n      setInvalidPassword(false);\n      setConfirmPassword(\"\");\n    } else {\n      let hash = Base64.stringify(sha256(event.target.value));\n\n      if (hash !== password) {\n        setInvalidPassword(true);\n      } else {\n        setInvalidPassword(false);\n      }\n\n      setConfirmPassword(hash);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(\"/login\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Create a PowerBank account\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleName,\n    placeholder: \"John\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleLastname,\n    placeholder: \"Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleUsername,\n    placeholder: \"jdoe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), invalidUsername && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Username is already taken.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    required: true,\n    onChange: handleEmail,\n    placeholder: \"jdoe@email.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), invalidEmail && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Email is already taken.\")), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Country Code\"), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    required: true,\n    onChange: handleCode,\n    placeholder: \"506\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    required: true,\n    onChange: handlePhone,\n    placeholder: \"88888888\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    required: true,\n    onChange: handlePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"passwordHelpBlock\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Your password must be minimum 8 characters long and contain at least one uppercase letter, one lowercase letter and one number. It must not contain spaces or special characters.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \" Confirm Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    required: true,\n    onChange: handleConfirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), invalidPassword && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Passwords don't match.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    type: \"cancel\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Register/Register.js"],"names":["React","useState","useEffect","Axios","useHistory","sha256","Base64","emailjs","Register","history","name","setName","lastName","setLastName","email","setEmail","username","setUsername","countryCode","setCountryCode","phoneNumber","setPhoneNumber","password","setPassword","confirmPassword","setConfirmPassword","invalidUsername","setInvalidUsername","invalidEmail","setInvalidEmail","invalidPassword","setInvalidPassword","handleSubmit","e","preventDefault","user","userUsername","checkUsername","userEmail","checkEmail","data","post","then","res","templateParams","subject","from","send","push","catch","console","log","get","handleName","event","target","value","handleLastname","handleUsername","handleEmail","handleCode","handlePhone","handlePassword","hash","stringify","handleConfirmPassword","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport sha256 from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\nimport './Register.scss'\nimport emailjs from 'emailjs-com';\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const [name, setName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [countryCode, setCountryCode] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const [invalidUsername, setInvalidUsername] = useState(false);\n    const [invalidEmail, setInvalidEmail] = useState(false);\n    const [invalidPassword, setInvalidPassword] = useState(false);\n\n    useEffect(() => {}, [invalidUsername, invalidEmail, invalidPassword]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setInvalidPassword(false);\n            const user = {\n                name,\n                lastName,\n                email,\n                username,\n                password,\n                countryCode,\n                phoneNumber\n            }\n\n            const userUsername = await checkUsername();\n            const userEmail = await checkEmail();\n            \n            if(userUsername.data.username || userEmail.data.email) {\n                userUsername.data.username ? setInvalidUsername(true) : setInvalidUsername(false);\n                userEmail.data.email ? setInvalidEmail(true) : setInvalidEmail(false);\n            } else {\n                Axios.post(`http://localhost:8081/api/v1/user`, user)\n                .then(res => {\n                    var templateParams = {\n                        subject: 'Welcome',\n                        email: 'daniel.varela.serrano@gmail.com',\n                        name: 'Daniel',\n                        from: 'PowerBank'\n                    };\n                    emailjs.send('gmail', 'template_8HJ8XF0v', templateParams, 'user_ykN9aw27EcEhXClqMft4o');\n                    history.push(\"/login\");\n                }).catch(e => {\n                    console.log(e);\n                });\n            }\n        } else {\n            setInvalidPassword(true);\n        }\n    }\n\n    const checkUsername = async () => {\n        let res = await Axios.get(`http://localhost:8081/api/v1/user/byUsername/${username}`);\n        return res;\n    };\n\n    const checkEmail = async () => {\n        let res = await Axios.get(`http://localhost:8081/api/v1/user/byEmail/${email}`);\n        return res;\n    };\n\n    const handleName = event => { setName(event.target.value); }\n\n    const handleLastname = event => { setLastName(event.target.value); }\n\n    const handleUsername = event => { setUsername(event.target.value); }\n\n    const handleEmail = event => { setEmail(event.target.value); }\n\n    const handleCode = event => { setCountryCode(event.target.value); }\n\n    const handlePhone = event => { setPhoneNumber(event.target.value); }\n\n    const handlePassword = event => {\n        if (event.target.value === \"\") {\n            setInvalidPassword(false);\n            setPassword(\"\");\n        } else {\n            let hash = Base64.stringify(sha256(event.target.value));\n            if (hash !== confirmPassword) {\n                setInvalidPassword(true);\n            } else {\n                setInvalidPassword(false);\n            }\n            setPassword(hash);\n        }\n    }\n\n    const handleConfirmPassword = event => {\n        if (event.target.value === \"\") {\n            setInvalidPassword(false);\n            setConfirmPassword(\"\");\n        } else {\n            let hash = Base64.stringify(sha256(event.target.value));\n            if (hash !== password) {\n                setInvalidPassword(true);\n            } else {\n                setInvalidPassword(false);\n            }\n            setConfirmPassword(hash);\n        }\n    }\n\n    const handleCancel = () => { history.push(\"/login\"); }\n\n    return (\n        <div className=\"container\">\n            <h1>Create a PowerBank account</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-sm-6\">\n                        <label>Name</label>\n                        <input className=\"form-control\" type=\"text\" required onChange={handleName} placeholder=\"John\" />\n                    </div>\n                    <div className=\"form-group col-sm-6\">\n                        <label>Last Name</label>\n                        <input className=\"form-control\" type=\"text\" required onChange={handleLastname} placeholder=\"Doe\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input className=\"form-control\" type=\"text\" required onChange={handleUsername} placeholder=\"jdoe\" />\n                    {invalidUsername &&\n                        <div className=\"invalid-entry\">Username is already taken.</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input className=\"form-control\" type=\"email\" required onChange={handleEmail} placeholder=\"jdoe@email.com\" />\n                    {invalidEmail &&\n                        <div className=\"invalid-entry\">Email is already taken.</div>\n                    }\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-sm-3\">\n                        <label>Country Code</label>\n                        <input type=\"number\" className=\"form-control\" required onChange={handleCode} placeholder=\"506\" />\n                    </div>\n                    <div className=\"form-group col-sm-9\">\n                        <label>Phone Number</label>\n                        <input type=\"number\" className=\"form-control\" required onChange={handlePhone} placeholder=\"88888888\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input className=\"form-control\" type=\"password\" required onChange={handlePassword}></input>\n                    <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                        Your password must be minimum 8 characters long and contain at least one uppercase letter,\n                        one lowercase letter and one number. It must not contain spaces or special characters.\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <label> Confirm Password</label>\n                    <input className=\"form-control\" type=\"password\" required onChange={handleConfirmPassword}></input>\n                    {invalidPassword &&\n                        <div className=\"invalid-entry\">Passwords don't match.</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <button className=\"btn btn-danger\" type=\"cancel\" onClick={handleCancel}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default Register;"]},"metadata":{},"sourceType":"module"}