{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/AccountsInfo/AccountsInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport Navbar from '../../components/Navbar/Navbar';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\nimport Transfers from '../Transfers/Transfers';\n\nconst AccountsInfo = props => {\n  const history = useHistory();\n  const [accounts, setAccounts] = useState([]);\n  const [cards, setCards] = useState([]);\n  const accountId = props.match.params.accountId;\n  const [cookies, removeCookie] = useCookies(['JWT']);\n\n  if (!validate(cookies.JWT)) {\n    removeCookie('JWT', {\n      path: '/'\n    });\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    const claims = validate(cookies.JWT);\n\n    if (claims) {}\n  }, [cookies]);\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Products Summary\")), React.createElement(Transfers, {\n    accountId: accountId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default AccountsInfo;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/AccountsInfo/AccountsInfo.js"],"names":["React","useState","useEffect","useCookies","Navbar","useHistory","validate","Axios","Transfers","AccountsInfo","props","history","accounts","setAccounts","cards","setCards","accountId","match","params","cookies","removeCookie","JWT","path","push","claims"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMe,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AAEA,QAAM,CAACG,OAAD,EAAUC,YAAV,IAA0BjB,UAAU,CAAC,CAAC,KAAD,CAAD,CAA1C;;AAEA,MAAI,CAACG,QAAQ,CAACa,OAAO,CAACE,GAAT,CAAb,EAA4B;AACxBD,IAAAA,YAAY,CAAC,KAAD,EAAQ;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAR,CAAZ;AACAX,IAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AACH;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,MAAM,GAAGlB,QAAQ,CAACa,OAAO,CAACE,GAAT,CAAvB;;AACA,QAAIG,MAAJ,EAAY,CACX;AACJ,GAJQ,EAIN,CAACL,OAAD,CAJM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAFJ,EAKI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAYH,CAlCD;;AAoCA,eAAeP,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport Navbar from '../../components/Navbar/Navbar';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\nimport Transfers from '../Transfers/Transfers';\n\nconst AccountsInfo = (props) => {\n\n    const history = useHistory();\n\n    const [accounts, setAccounts] = useState([]);\n    const [cards, setCards] = useState([]);\n\n    const accountId = props.match.params.accountId;\n\n    const [cookies, removeCookie] = useCookies(['JWT']);\n\n    if (!validate(cookies.JWT)) {\n        removeCookie('JWT', { path: '/' });\n        history.push(\"/login\");\n    }\n\n    useEffect(() => {\n        const claims = validate(cookies.JWT);\n        if (claims) {\n        }\n    }, [cookies]);\n\n    return (\n        <div className=\"wrapper\">\n            <div id=\"content\">\n                <Navbar />\n                <div >\n                    <h2 className=\"page-title\">Products Summary</h2>\n                </div>\n                <Transfers accountId={accountId} />\n            </div>\n        </div>\n    );\n\n}\n\nexport default AccountsInfo;"]},"metadata":{},"sourceType":"module"}