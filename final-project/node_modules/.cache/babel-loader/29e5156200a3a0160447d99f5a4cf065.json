{"ast":null,"code":"import soapRequest from 'easy-soap-request';\nimport { readFileSync } from 'fs'; // usage of module\n\nconst getBuyExchangeRate = async indicator => {\n  //const xml = readFileSync('./exchangeRates.xml', 'utf-8');\n  const dateToday = '24/02/2020';\n  const name = 'Daniel Varela Serrano';\n  const email = 'daniel.varela.serrano@gmail.com';\n  const token = '6031D1V2ER';\n  const url = `https://gee.bccr.fi.cr/Indicadores/Suscripciones/WS/wsindicadoreseconomicos.asmx/ObtenerIndicadoresEconomicosXML?Indicador=${indicator}&FechaInicio=${dateToday}&FechaFinal=${dateToday}&Nombre=${name}&SubNiveles=N&CorreoElectronico=${email}&Token=${token}`;\n  const {\n    response\n  } = await soapRequest({\n    url: url\n  }); // Optional timeout parameter(milliseconds)\n\n  const {\n    headers,\n    body,\n    statusCode\n  } = response;\n  console.log(headers);\n  console.log(body);\n  console.log(statusCode);\n};\n\nexport default getBuyExchangeRate;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/utils/SOAPRequest.js"],"names":["soapRequest","readFileSync","getBuyExchangeRate","indicator","dateToday","name","email","token","url","response","headers","body","statusCode","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,IAA7B,C,CAEA;;AACA,MAAMC,kBAAkB,GAAG,MAAOC,SAAP,IAAqB;AAC9C;AACA,QAAMC,SAAS,GAAG,YAAlB;AACA,QAAMC,IAAI,GAAG,uBAAb;AACA,QAAMC,KAAK,GAAG,iCAAd;AACA,QAAMC,KAAK,GAAG,YAAd;AACA,QAAMC,GAAG,GAAI,8HAA6HL,SAAU,gBAAeC,SAAU,eAAcA,SAAU,WAAUC,IAAK,mCAAkCC,KAAM,UAASC,KAAM,EAA3Q;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAe,MAAMT,WAAW,CAAC;AAAEQ,IAAAA,GAAG,EAAEA;AAAP,GAAD,CAAtC,CAP8C,CAOQ;;AACtD,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAAgCH,QAAtC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,CAZD;;AAcA,eAAeV,kBAAf","sourcesContent":["import soapRequest from 'easy-soap-request';\nimport { readFileSync } from 'fs';\n\n// usage of module\nconst getBuyExchangeRate = async (indicator) => {\n  //const xml = readFileSync('./exchangeRates.xml', 'utf-8');\n  const dateToday = '24/02/2020';\n  const name = 'Daniel Varela Serrano';\n  const email = 'daniel.varela.serrano@gmail.com';\n  const token = '6031D1V2ER';\n  const url = `https://gee.bccr.fi.cr/Indicadores/Suscripciones/WS/wsindicadoreseconomicos.asmx/ObtenerIndicadoresEconomicosXML?Indicador=${indicator}&FechaInicio=${dateToday}&FechaFinal=${dateToday}&Nombre=${name}&SubNiveles=N&CorreoElectronico=${email}&Token=${token}`;\n  const { response } = await soapRequest({ url: url }); // Optional timeout parameter(milliseconds)\n  const { headers, body, statusCode } = response;\n  console.log(headers);\n  console.log(body);\n  console.log(statusCode);\n};\n\nexport default getBuyExchangeRate;\n"]},"metadata":{},"sourceType":"module"}