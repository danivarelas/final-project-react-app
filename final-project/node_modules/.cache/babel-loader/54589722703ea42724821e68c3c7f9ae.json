{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Register/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport sha256 from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\nimport { useCookies } from 'react-cookie';\nimport './Register.scss';\n\nconst Register = () => {\n  const history = useHistory();\n  const [cookies, setCookie] = useCookies(['JWT']);\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [existingUsername, setExistingUsername] = useState(\"\");\n  const [existingEmail, setExistingEmail] = useState(\"\");\n  const [invalidUsername, setInvalidUsername] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [invalidPassword, setInvalidPassword] = useState(false);\n  useEffect(() => {}, [invalidUsername, invalidEmail, invalidPassword]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setInvalidPassword(false);\n      const user = {\n        name,\n        lastName,\n        email,\n        username,\n        password,\n        countryCode,\n        phoneNumber\n      };\n      await checkUsername();\n      await checkEmail();\n      console.log(existingUsername);\n\n      if (existingUsername || existingEmail) {\n        existingUsername ? setInvalidUsername(true) : setInvalidUsername(false);\n        existingEmail ? setInvalidEmail(true) : setInvalidEmail(false);\n      } else {\n        Axios.post(`http://localhost:8081/api/v1/user`, user).then(res => {\n          history.push(\"/login\");\n        }).catch(e => {\n          console.log(e);\n\n          if (Axios.isCancel(e)) {\n            alert(`request cancelled:${e.message}`);\n          } else {\n            alert(\"another error happened:\" + e.message);\n          }\n        });\n      }\n    } else {\n      setInvalidPassword(true);\n    }\n  };\n\n  const checkUsername = async () => {\n    let res = await Axios.get(`http://localhost:8081/api/v1/user/byUsername/${username}`, {\n      headers: {\n        JWT: cookies.JWT\n      }\n    });\n    console.log(res);\n\n    if (res) {\n      setExistingUsername(res.data);\n    }\n  };\n\n  const checkEmail = () => {\n    Axios.get(`http://localhost:8081/api/v1/user/byEmail/${email}`, {\n      headers: {\n        JWT: cookies.JWT\n      }\n    }).then(res => {\n      setExistingEmail(res.data);\n    }).catch(e => {\n      setExistingEmail(\"\");\n    });\n  };\n\n  const handleName = event => {\n    setName(event.target.value);\n  };\n\n  const handleLastname = event => {\n    setLastName(event.target.value);\n  };\n\n  const handleUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const handleCode = event => {\n    setCountryCode(event.target.value);\n  };\n\n  const handlePhone = event => {\n    setPhoneNumber(event.target.value);\n  };\n\n  const handlePassword = event => {\n    if (event.target.value === \"\") {\n      setInvalidPassword(false);\n      setPassword(\"\");\n    } else {\n      let hash = Base64.stringify(sha256(event.target.value));\n\n      if (hash !== confirmPassword) {\n        setInvalidPassword(true);\n      } else {\n        setInvalidPassword(false);\n      }\n\n      setPassword(hash);\n    }\n  };\n\n  const handleConfirmPassword = event => {\n    if (event.target.value === \"\") {\n      setInvalidPassword(false);\n      setConfirmPassword(\"\");\n    } else {\n      let hash = Base64.stringify(sha256(event.target.value));\n\n      if (hash !== password) {\n        setInvalidPassword(true);\n      } else {\n        setInvalidPassword(false);\n      }\n\n      setConfirmPassword(hash);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(\"/login\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Create a PowerBank account\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleName,\n    placeholder: \"John\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleLastname,\n    placeholder: \"Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleUsername,\n    placeholder: \"jdoe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), invalidUsername && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Username is already taken.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    required: true,\n    onChange: handleEmail,\n    placeholder: \"jdoe@email.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), invalidEmail && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Email is already taken.\")), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Country Code\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    onChange: handleCode,\n    placeholder: \"+506\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    onChange: handlePhone,\n    placeholder: \"88888888\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    required: true,\n    onChange: handlePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"passwordHelpBlock\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Your password must be minimum 8 characters long and contain at least one uppercase letter, one lowercase letter and one number. It must not contain spaces or special characters.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \" Confirm Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    required: true,\n    onChange: handleConfirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), invalidPassword && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Passwords don't match.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    type: \"cancel\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Register/Register.js"],"names":["React","useState","useEffect","Axios","useHistory","sha256","Base64","useCookies","Register","history","cookies","setCookie","name","setName","lastName","setLastName","email","setEmail","username","setUsername","countryCode","setCountryCode","phoneNumber","setPhoneNumber","password","setPassword","confirmPassword","setConfirmPassword","existingUsername","setExistingUsername","existingEmail","setExistingEmail","invalidUsername","setInvalidUsername","invalidEmail","setInvalidEmail","invalidPassword","setInvalidPassword","handleSubmit","e","preventDefault","user","checkUsername","checkEmail","console","log","post","then","res","push","catch","isCancel","alert","message","get","headers","JWT","data","handleName","event","target","value","handleLastname","handleUsername","handleEmail","handleCode","handlePhone","handlePassword","hash","stringify","handleConfirmPassword","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport sha256 from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\nimport { useCookies } from 'react-cookie';\nimport './Register.scss'\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const [cookies, setCookie] = useCookies(['JWT']);\n\n    const [name, setName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [countryCode, setCountryCode] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const [existingUsername, setExistingUsername] = useState(\"\");\n    const [existingEmail, setExistingEmail] = useState(\"\");\n    const [invalidUsername, setInvalidUsername] = useState(false);\n    const [invalidEmail, setInvalidEmail] = useState(false);\n    const [invalidPassword, setInvalidPassword] = useState(false);\n\n    useEffect(() => {}, [invalidUsername, invalidEmail, invalidPassword]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setInvalidPassword(false);\n            const user = {\n                name,\n                lastName,\n                email,\n                username,\n                password,\n                countryCode,\n                phoneNumber\n            }\n\n            await checkUsername();\n            await checkEmail();\n\n            console.log(existingUsername)\n            \n            if(existingUsername || existingEmail) {\n                existingUsername ? setInvalidUsername(true) : setInvalidUsername(false);\n                existingEmail ? setInvalidEmail(true) : setInvalidEmail(false);\n            } else {\n                Axios.post(`http://localhost:8081/api/v1/user`, user)\n                .then(res => {\n                    history.push(\"/login\");\n                }).catch(e => {\n                    console.log(e);\n                    if (Axios.isCancel(e)) {\n                        alert(`request cancelled:${e.message}`);\n                    } else {\n                        alert(\"another error happened:\" + e.message);\n                    }\n                });\n            }\n        } else {\n            setInvalidPassword(true);\n        }\n    }\n\n    const checkUsername = async () => {\n        let res = await Axios.get(`http://localhost:8081/api/v1/user/byUsername/${username}`, {\n            headers: {\n                JWT: cookies.JWT,\n            }\n        })\n        console.log(res)\n        if(res){\n            setExistingUsername(res.data);\n        }\n    };\n\n    const checkEmail = () => {\n        Axios.get(`http://localhost:8081/api/v1/user/byEmail/${email}`, {\n            headers: {\n                JWT: cookies.JWT,\n            }\n        }).then(res => {\n            setExistingEmail(res.data);\n        }).catch(e => {\n            setExistingEmail(\"\");\n        });\n    };\n\n    const handleName = event => { setName(event.target.value); }\n\n    const handleLastname = event => { setLastName(event.target.value); }\n\n    const handleUsername = event => { setUsername(event.target.value); }\n\n    const handleEmail = event => { setEmail(event.target.value); }\n\n    const handleCode = event => { setCountryCode(event.target.value); }\n\n    const handlePhone = event => { setPhoneNumber(event.target.value); }\n\n    const handlePassword = event => {\n        if (event.target.value === \"\") {\n            setInvalidPassword(false);\n            setPassword(\"\");\n        } else {\n            let hash = Base64.stringify(sha256(event.target.value));\n            if (hash !== confirmPassword) {\n                setInvalidPassword(true);\n            } else {\n                setInvalidPassword(false);\n            }\n            setPassword(hash);\n        }\n    }\n\n    const handleConfirmPassword = event => {\n        if (event.target.value === \"\") {\n            setInvalidPassword(false);\n            setConfirmPassword(\"\");\n        } else {\n            let hash = Base64.stringify(sha256(event.target.value));\n            if (hash !== password) {\n                setInvalidPassword(true);\n            } else {\n                setInvalidPassword(false);\n            }\n            setConfirmPassword(hash);\n        }\n    }\n\n    const handleCancel = () => { history.push(\"/login\"); }\n\n    return (\n        <div className=\"container\">\n            <h1>Create a PowerBank account</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-sm-6\">\n                        <label>Name</label>\n                        <input className=\"form-control\" type=\"text\" required onChange={handleName} placeholder=\"John\" />\n                    </div>\n                    <div className=\"form-group col-sm-6\">\n                        <label>Last Name</label>\n                        <input className=\"form-control\" type=\"text\" required onChange={handleLastname} placeholder=\"Doe\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input className=\"form-control\" type=\"text\" required onChange={handleUsername} placeholder=\"jdoe\" />\n                    {invalidUsername &&\n                        <div className=\"invalid-entry\">Username is already taken.</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input className=\"form-control\" type=\"email\" required onChange={handleEmail} placeholder=\"jdoe@email.com\" />\n                    {invalidEmail &&\n                        <div className=\"invalid-entry\">Email is already taken.</div>\n                    }\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-sm-3\">\n                        <label>Country Code</label>\n                        <input type=\"text\" className=\"form-control\" required onChange={handleCode} placeholder=\"+506\" />\n                    </div>\n                    <div className=\"form-group col-sm-9\">\n                        <label>Phone Number</label>\n                        <input type=\"text\" className=\"form-control\" required onChange={handlePhone} placeholder=\"88888888\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input className=\"form-control\" type=\"password\" required onChange={handlePassword}></input>\n                    <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                        Your password must be minimum 8 characters long and contain at least one uppercase letter,\n                        one lowercase letter and one number. It must not contain spaces or special characters.\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <label> Confirm Password</label>\n                    <input className=\"form-control\" type=\"password\" required onChange={handleConfirmPassword}></input>\n                    {invalidPassword &&\n                        <div className=\"invalid-entry\">Passwords don't match.</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <button className=\"btn btn-danger\" type=\"cancel\" onClick={handleCancel}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default Register;"]},"metadata":{},"sourceType":"module"}