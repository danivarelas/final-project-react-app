{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/final-project-react-app/final-project/src/pages/NewServicePayment/NewServicePayment.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Axios from 'axios';\nimport emailjs from 'emailjs-com';\nimport LabelGroup from '../../components/LabelGroup/LabelGroup';\n\nconst NewServicePayment = () => {\n  const history = useHistory();\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [serviceId, setServiceId] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [services, setServices] = useState([]);\n  const [invalidAmount, setInvalidAmount] = useState(false);\n  const [insufficientFunds, setInsufficientFunds] = useState(false);\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  if (!validate(sessionStorage.getItem('JWT'))) {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    if (description && amount && serviceId) {\n      setSubmitDisabled(false);\n    } else {\n      setSubmitDisabled(true);\n    }\n\n    const token = sessionStorage.getItem('JWT');\n    const claims = validate(token);\n\n    if (claims) {\n      if (!accounts.length) {\n        Axios.get(`http://localhost:8081/api/v1/account/byUserId/${claims.id}`, {\n          headers: {\n            JWT: token\n          }\n        }).then(res => {\n          const {\n            data\n          } = res;\n          setAccounts(data);\n          setAccountNumber(data[0].accountNumber);\n        }).catch(e => {});\n      }\n\n      if (!services.length) {\n        Axios.get(`http://localhost:8081/api/v1/service`, {\n          headers: {\n            JWT: token\n          }\n        }).then(res => {\n          const {\n            data\n          } = res;\n          setServices(data);\n          setServiceId(data[0].id);\n        }).catch(e => {});\n      }\n    }\n  }, [accounts, serviceId, services, amount, description]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setInsufficientFunds(false);\n    const token = sessionStorage.getItem('JWT');\n    const claims = validate(token);\n    const validAmount = checkAmount();\n\n    if (!validAmount) {\n      validAmount ? setInvalidAmount(false) : setInvalidAmount(true);\n    } else {\n      const account = await checkAccount(accountNumber);\n      const payment = {\n        paymentNumber: Math.floor(Math.random() * 100000000 + 1000000000),\n        paymentDescription: description,\n        amount: amount,\n        currency: account.currency,\n        paymentDate: new Date(),\n        userId: claims.id,\n        accountId: account.id,\n        serviceId: serviceId\n      };\n      console.log(payment);\n      Axios.post(`http://localhost:8081/api/v1/payment`, payment, {\n        headers: {\n          JWT: token\n        }\n      }).then(res => {\n        const {\n          data\n        } = res;\n        const paidService = services.filter(service => service.id === data.serviceId)[0].serviceName;\n        let templateParams = {\n          subject: `Service Payment: ${paidService}`,\n          email: 'daniel.varela.serrano@gmail.com',\n          name: 'Daniel',\n          from: 'PowerBank',\n          message: `You have successfully paid ${data.amount} ${data.currency} to the service: ${paidService}`\n        };\n        emailjs.send('gmail', 'template_8HJ8XF0v', templateParams, 'user_ykN9aw27EcEhXClqMft4o');\n        history.goBack();\n      }).catch(e => {\n        console.log(e);\n        setInsufficientFunds(true);\n      });\n    }\n  };\n\n  const checkAmount = () => {\n    if (amount > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const checkAccount = async number => {\n    let res = await Axios.get(`http://localhost:8081/api/v1/account/${number}`, {\n      headers: {\n        JWT: sessionStorage.getItem('JWT')\n      }\n    });\n    return res.data.accountNumber ? res.data : null;\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleAccount = event => {\n    setAccountNumber(event.target.value);\n  };\n\n  const handleService = event => {\n    setServiceId(event.target.value);\n  };\n\n  const handleDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleAmount = event => {\n    setAmount(event.target.value);\n  };\n\n  const toggleDisabled = event => {\n    setInputDisabled(!inputDisabled);\n    setInvalidAmount(false);\n    setInsufficientFunds(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Pay Services\"))), React.createElement(\"div\", {\n    className: \"block-section container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-section-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"block-section-header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Payment Details\")), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Source Account\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"source-account\",\n    onChange: handleAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, accounts.map((account, index) => {\n    if (index === 0) {\n      return React.createElement(\"option\", {\n        key: account.id,\n        value: account.accountNumber,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, account.accountNumber + \" - \" + account.balance + \" \" + account.currency);\n    } else {\n      return React.createElement(\"option\", {\n        key: account.id,\n        value: account.accountNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, account.accountNumber + \" - \" + account.balance + \" \" + account.currency);\n    }\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Service\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"service\",\n    onChange: handleService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, services.map((service, index) => {\n    if (index === 0) {\n      return React.createElement(\"option\", {\n        key: service.id,\n        value: service.id,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, service.serviceName);\n    } else {\n      return React.createElement(\"option\", {\n        key: service.id,\n        value: service.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, service.serviceName);\n    }\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"number\",\n    required: true,\n    step: \"0.01\",\n    onChange: handleAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"passwordHelpBlock\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"The amount has to be specified in the source account currency.\"), invalidAmount && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"You have to specify an amount greater than zero.\"), insufficientFunds && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"You have insufficient funds.\")), !inputDisabled && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"cancel\",\n    className: \"btn btn-danger\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    disabled: submitDisabled,\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#collapseExample\",\n    \"aria-expanded\": \"false\",\n    \"aria-controls\": \"collapseExample\",\n    onClick: toggleDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Continue\")), React.createElement(\"div\", {\n    class: \"collapse\",\n    id: \"collapseExample\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"card card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(LabelGroup, {\n    title: \"Source Account\",\n    text: accountNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(LabelGroup, {\n    title: \"Service\",\n    text: serviceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(LabelGroup, {\n    title: \"Description\",\n    text: description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(LabelGroup, {\n    title: \"Amount\",\n    text: amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: toggleDisabled,\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#collapseExample\",\n    \"aria-expanded\": \"false\",\n    \"aria-controls\": \"collapseExample\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Back\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Pay\")))))));\n};\n\nexport default NewServicePayment;","map":{"version":3,"sources":["/Users/user/Desktop/final-project-react-app/final-project/src/pages/NewServicePayment/NewServicePayment.js"],"names":["React","useState","useEffect","useHistory","validate","Navbar","Axios","emailjs","LabelGroup","NewServicePayment","history","description","setDescription","amount","setAmount","accountNumber","setAccountNumber","serviceId","setServiceId","accounts","setAccounts","services","setServices","invalidAmount","setInvalidAmount","insufficientFunds","setInsufficientFunds","inputDisabled","setInputDisabled","submitDisabled","setSubmitDisabled","sessionStorage","getItem","push","token","claims","length","get","id","headers","JWT","then","res","data","catch","e","handleSubmit","preventDefault","validAmount","checkAmount","account","checkAccount","payment","paymentNumber","Math","floor","random","paymentDescription","currency","paymentDate","Date","userId","accountId","console","log","post","paidService","filter","service","serviceName","templateParams","subject","email","name","from","message","send","goBack","number","handleCancel","handleAccount","event","target","value","handleService","handleDescription","handleAmount","toggleDisabled","map","index","balance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACwB,iBAAD,EAAoBC,oBAApB,IAA4CzB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,CAAC,IAAD,CAApD;;AAEA,MAAI,CAACG,QAAQ,CAAC2B,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAD,CAAb,EAA8C;AAC1CtB,IAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACH;;AAED/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,WAAW,IAAIE,MAAf,IAAyBI,SAA7B,EAAwC;AACpCa,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;;AACD,UAAMI,KAAK,GAAGH,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAd;AACA,UAAMG,MAAM,GAAG/B,QAAQ,CAAC8B,KAAD,CAAvB;;AACA,QAAIC,MAAJ,EAAY;AACR,UAAI,CAAChB,QAAQ,CAACiB,MAAd,EAAsB;AAClB9B,QAAAA,KAAK,CAAC+B,GAAN,CAAW,iDAAgDF,MAAM,CAACG,EAAG,EAArE,EAAwE;AACpEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,GAAG,EAAEN;AAAP;AAD2D,SAAxE,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACX,gBAAM;AAAEC,YAAAA;AAAF,cAAWD,GAAjB;AACAtB,UAAAA,WAAW,CAACuB,IAAD,CAAX;AACA3B,UAAAA,gBAAgB,CAAC2B,IAAI,CAAC,CAAD,CAAJ,CAAQ5B,aAAT,CAAhB;AACH,SAND,EAMG6B,KANH,CAMSC,CAAC,IAAI,CAEb,CARD;AASH;;AACD,UAAI,CAACxB,QAAQ,CAACe,MAAd,EAAsB;AAClB9B,QAAAA,KAAK,CAAC+B,GAAN,CAAW,sCAAX,EAAkD;AAC9CE,UAAAA,OAAO,EAAE;AAAEC,YAAAA,GAAG,EAAEN;AAAP;AADqC,SAAlD,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACX,gBAAM;AAAEC,YAAAA;AAAF,cAAWD,GAAjB;AACApB,UAAAA,WAAW,CAACqB,IAAD,CAAX;AACAzB,UAAAA,YAAY,CAACyB,IAAI,CAAC,CAAD,CAAJ,CAAQL,EAAT,CAAZ;AACH,SAND,EAMGM,KANH,CAMSC,CAAC,IAAI,CAEb,CARD;AASH;AACJ;AACJ,GAhCQ,EAgCN,CAAC1B,QAAD,EAAWF,SAAX,EAAsBI,QAAtB,EAAgCR,MAAhC,EAAwCF,WAAxC,CAhCM,CAAT;;AAkCA,QAAMmC,YAAY,GAAG,MAAOD,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACE,cAAF;AACArB,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AAEA,UAAMQ,KAAK,GAAGH,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAd;AACA,UAAMG,MAAM,GAAG/B,QAAQ,CAAC8B,KAAD,CAAvB;AACA,UAAMc,WAAW,GAAGC,WAAW,EAA/B;;AAEA,QAAI,CAACD,WAAL,EAAkB;AACdA,MAAAA,WAAW,GAAGxB,gBAAgB,CAAC,KAAD,CAAnB,GAA6BA,gBAAgB,CAAC,IAAD,CAAxD;AACH,KAFD,MAEO;AACH,YAAM0B,OAAO,GAAG,MAAMC,YAAY,CAACpC,aAAD,CAAlC;AAEA,YAAMqC,OAAO,GAAG;AACZC,QAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,SAAjB,GAA8B,UAAzC,CADH;AAEZC,QAAAA,kBAAkB,EAAE9C,WAFR;AAGZE,QAAAA,MAAM,EAAEA,MAHI;AAIZ6C,QAAAA,QAAQ,EAAER,OAAO,CAACQ,QAJN;AAKZC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,EALD;AAMZC,QAAAA,MAAM,EAAE1B,MAAM,CAACG,EANH;AAOZwB,QAAAA,SAAS,EAAEZ,OAAO,CAACZ,EAPP;AAQZrB,QAAAA,SAAS,EAAEA;AARC,OAAhB;AAWA8C,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEA9C,MAAAA,KAAK,CAAC2D,IAAN,CAAY,sCAAZ,EAAmDb,OAAnD,EAA4D;AACxDb,QAAAA,OAAO,EAAE;AAAEC,UAAAA,GAAG,EAAEN;AAAP;AAD+C,OAA5D,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACX,cAAM;AAAEC,UAAAA;AAAF,YAAWD,GAAjB;AACA,cAAMwB,WAAW,GAAG7C,QAAQ,CAAC8C,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAAC9B,EAAR,KAAeK,IAAI,CAAC1B,SAA/C,EAA0D,CAA1D,EAA6DoD,WAAjF;AACA,YAAIC,cAAc,GAAG;AACjBC,UAAAA,OAAO,EAAG,oBAAmBL,WAAY,EADxB;AAEjBM,UAAAA,KAAK,EAAE,iCAFU;AAGjBC,UAAAA,IAAI,EAAE,QAHW;AAIjBC,UAAAA,IAAI,EAAE,WAJW;AAKjBC,UAAAA,OAAO,EAAG,8BAA6BhC,IAAI,CAAC9B,MAAO,IAAG8B,IAAI,CAACe,QAAS,oBAAmBQ,WAAY;AALlF,SAArB;AAOA3D,QAAAA,OAAO,CAACqE,IAAR,CAAa,OAAb,EAAsB,mBAAtB,EAA2CN,cAA3C,EAA2D,4BAA3D;AACA5D,QAAAA,OAAO,CAACmE,MAAR;AACH,OAdD,EAcGjC,KAdH,CAcSC,CAAC,IAAI;AACVkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAZ;AACAnB,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OAjBD;AAkBH;AACJ,GA7CD;;AA+CA,QAAMuB,WAAW,GAAG,MAAM;AACtB,QAAIpC,MAAM,GAAG,CAAb,EAAgB;AACZ,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAND;;AAQA,QAAMsC,YAAY,GAAG,MAAO2B,MAAP,IAAkB;AACnC,QAAIpC,GAAG,GAAG,MAAMpC,KAAK,CAAC+B,GAAN,CAAW,wCAAuCyC,MAAO,EAAzD,EAA4D;AACxEvC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,GAAG,EAAET,cAAc,CAACC,OAAf,CAAuB,KAAvB;AAAP;AAD+D,KAA5D,CAAhB;AAGA,WAAOU,GAAG,CAACC,IAAJ,CAAS5B,aAAT,GAAyB2B,GAAG,CAACC,IAA7B,GAAoC,IAA3C;AACH,GALD;;AAOA,QAAMoC,YAAY,GAAG,MAAM;AAAErE,IAAAA,OAAO,CAACmE,MAAR;AAAmB,GAAhD;;AAEA,QAAMG,aAAa,GAAGC,KAAK,IAAI;AAC3BjE,IAAAA,gBAAgB,CAACiE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAGH,KAAK,IAAI;AAC3B/D,IAAAA,YAAY,CAAC+D,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAGJ,KAAK,IAAI;AAC/BrE,IAAAA,cAAc,CAACqE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAGL,KAAK,IAAI;AAC1BnE,IAAAA,SAAS,CAACmE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAGN,KAAK,IAAI;AAC5BrD,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAH,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CAFJ,EAOI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAII;AAAM,IAAA,QAAQ,EAAEoB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,gBAApC;AAAqD,IAAA,QAAQ,EAAEkC,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7D,QAAQ,CAACqE,GAAT,CAAa,CAACtC,OAAD,EAAUuC,KAAV,KAAoB;AAC9B,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,aAAO;AAAQ,QAAA,GAAG,EAAEvC,OAAO,CAACZ,EAArB;AAAyB,QAAA,KAAK,EAAEY,OAAO,CAACnC,aAAxC;AAAuD,QAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACFmC,OAAO,CAACnC,aAAR,GAAwB,KAAxB,GAAgCmC,OAAO,CAACwC,OAAxC,GAAkD,GAAlD,GAAwDxC,OAAO,CAACQ,QAD9D,CAAP;AAGH,KAJD,MAIO;AACH,aAAO;AAAQ,QAAA,GAAG,EAAER,OAAO,CAACZ,EAArB;AAAyB,QAAA,KAAK,EAAEY,OAAO,CAACnC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACFmC,OAAO,CAACnC,aAAR,GAAwB,KAAxB,GAAgCmC,OAAO,CAACwC,OAAxC,GAAkD,GAAlD,GAAwDxC,OAAO,CAACQ,QAD9D,CAAP;AAGH;AACJ,GAVA,CADL,CAFJ,CADJ,EAiBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,SAApC;AAA8C,IAAA,QAAQ,EAAE0B,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/D,QAAQ,CAACmE,GAAT,CAAa,CAACpB,OAAD,EAAUqB,KAAV,KAAoB;AAC9B,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,aAAO;AAAQ,QAAA,GAAG,EAAErB,OAAO,CAAC9B,EAArB;AAAyB,QAAA,KAAK,EAAE8B,OAAO,CAAC9B,EAAxC;AAA4C,QAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsD8B,OAAO,CAACC,WAA9D,CAAP;AACH,KAFD,MAEO;AACH,aAAO;AAAQ,QAAA,GAAG,EAAED,OAAO,CAAC9B,EAArB;AAAyB,QAAA,KAAK,EAAE8B,OAAO,CAAC9B,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6C8B,OAAO,CAACC,WAArD,CAAP;AACH;AACJ,GANA,CADL,CAFJ,CAjBJ,EA6BI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,QAAQ,MAApD;AAAqD,IAAA,QAAQ,EAAEgB,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA7BJ,EAiCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAA8C,IAAA,QAAQ,MAAtD;AAAuD,IAAA,IAAI,EAAC,MAA5D;AAAmE,IAAA,QAAQ,EAAEC,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,EAAE,EAAC,mBAAV;AAA8B,IAAA,SAAS,EAAC,sBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAHJ,EAMK/D,aAAa,IACV;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPR,EASKE,iBAAiB,IACd;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAVR,CAjCJ,EA8CK,CAACE,aAAD,IACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAEoD,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAQ,IAAA,QAAQ,EAAElD,cAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,SAAS,EAAC,iBAA1D;AAA4E,mBAAY,UAAxF;AAAmG,mBAAY,kBAA/G;AAAkI,qBAAc,OAAhJ;AAAwJ,qBAAc,iBAAtK;AAAwL,IAAA,OAAO,EAAE0D,cAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CA/CR,EAoDI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAsB,IAAA,EAAE,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAExE,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAEE,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAgC,IAAA,IAAI,EAAEN,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,IAAI,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAE0E,cAAjB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,SAAS,EAAC,gBAAzD;AAA0E,mBAAY,UAAtF;AAAiG,mBAAY,kBAA7G;AAAgI,qBAAc,OAA9I;AAAsJ,qBAAc,iBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CADJ,CApDJ,CAJJ,CAPJ,CADJ,CADJ;AAgFH,CA5ND;;AA8NA,eAAe9E,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Axios from 'axios';\nimport emailjs from 'emailjs-com';\nimport LabelGroup from '../../components/LabelGroup/LabelGroup';\n\nconst NewServicePayment = () => {\n\n    const history = useHistory();\n\n    const [description, setDescription] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [accountNumber, setAccountNumber] = useState(\"\");\n    const [serviceId, setServiceId] = useState(\"\");\n\n    const [accounts, setAccounts] = useState([]);\n    const [services, setServices] = useState([]);\n    const [invalidAmount, setInvalidAmount] = useState(false);\n    const [insufficientFunds, setInsufficientFunds] = useState(false);\n    const [inputDisabled, setInputDisabled] = useState(false);\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n    if (!validate(sessionStorage.getItem('JWT'))) {\n        history.push(\"/login\");\n    }\n\n    useEffect(() => {\n        if (description && amount && serviceId) {\n            setSubmitDisabled(false);\n        } else {\n            setSubmitDisabled(true);\n        }\n        const token = sessionStorage.getItem('JWT');\n        const claims = validate(token);\n        if (claims) {\n            if (!accounts.length) {\n                Axios.get(`http://localhost:8081/api/v1/account/byUserId/${claims.id}`, {\n                    headers: { JWT: token }\n                }).then(res => {\n                    const { data } = res;\n                    setAccounts(data);\n                    setAccountNumber(data[0].accountNumber);\n                }).catch(e => {\n\n                });\n            }\n            if (!services.length) {\n                Axios.get(`http://localhost:8081/api/v1/service`, {\n                    headers: { JWT: token }\n                }).then(res => {\n                    const { data } = res;\n                    setServices(data);\n                    setServiceId(data[0].id);\n                }).catch(e => {\n\n                });\n            }\n        }\n    }, [accounts, serviceId, services, amount, description]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setInsufficientFunds(false);\n\n        const token = sessionStorage.getItem('JWT');\n        const claims = validate(token);\n        const validAmount = checkAmount();\n\n        if (!validAmount) {\n            validAmount ? setInvalidAmount(false) : setInvalidAmount(true);\n        } else {\n            const account = await checkAccount(accountNumber);\n\n            const payment = {\n                paymentNumber: Math.floor((Math.random() * 100000000) + 1000000000),\n                paymentDescription: description,\n                amount: amount,\n                currency: account.currency,\n                paymentDate: new Date(),\n                userId: claims.id,\n                accountId: account.id,\n                serviceId: serviceId\n            }\n\n            console.log(payment)\n\n            Axios.post(`http://localhost:8081/api/v1/payment`, payment, {\n                headers: { JWT: token }\n            }).then(res => {\n                const { data } = res;\n                const paidService = services.filter(service => service.id === data.serviceId)[0].serviceName;\n                let templateParams = {\n                    subject: `Service Payment: ${paidService}`,\n                    email: 'daniel.varela.serrano@gmail.com',\n                    name: 'Daniel',\n                    from: 'PowerBank',\n                    message: `You have successfully paid ${data.amount} ${data.currency} to the service: ${paidService}`\n                };\n                emailjs.send('gmail', 'template_8HJ8XF0v', templateParams, 'user_ykN9aw27EcEhXClqMft4o');\n                history.goBack();\n            }).catch(e => {\n                console.log(e);\n                setInsufficientFunds(true);\n            });\n        }\n    }\n\n    const checkAmount = () => {\n        if (amount > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const checkAccount = async (number) => {\n        let res = await Axios.get(`http://localhost:8081/api/v1/account/${number}`, {\n            headers: { JWT: sessionStorage.getItem('JWT') }\n        })\n        return res.data.accountNumber ? res.data : null;\n    };\n\n    const handleCancel = () => { history.goBack(); }\n\n    const handleAccount = event => {\n        setAccountNumber(event.target.value);\n    };\n\n    const handleService = event => {\n        setServiceId(event.target.value);\n    };\n\n    const handleDescription = event => {\n        setDescription(event.target.value);\n    };\n\n    const handleAmount = event => {\n        setAmount(event.target.value);\n    };\n\n    const toggleDisabled = event => {\n        setInputDisabled(!inputDisabled);\n        setInvalidAmount(false);\n        setInsufficientFunds(false);\n    };\n\n    return (\n        <div className=\"wrapper\">\n            <div id=\"content\">\n                <Navbar />\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <h2 className=\"page-title\">Pay Services</h2>\n                    </div>\n                </div>\n                <div className=\"block-section container-fluid\">\n                    <div className=\"block-section-header\">\n                        <h3 className=\"block-section-header-text\">Payment Details</h3>\n                    </div>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label>Source Account</label>\n                            <select className=\"form-control\" id=\"source-account\" onChange={handleAccount}>\n                                {accounts.map((account, index) => {\n                                    if (index === 0) {\n                                        return <option key={account.id} value={account.accountNumber} selected>\n                                            {account.accountNumber + \" - \" + account.balance + \" \" + account.currency}\n                                        </option>;\n                                    } else {\n                                        return <option key={account.id} value={account.accountNumber}>\n                                            {account.accountNumber + \" - \" + account.balance + \" \" + account.currency}\n                                        </option>;\n                                    }\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Service</label>\n                            <select className=\"form-control\" id=\"service\" onChange={handleService}>\n                                {services.map((service, index) => {\n                                    if (index === 0) {\n                                        return <option key={service.id} value={service.id} selected>{service.serviceName}</option>;\n                                    } else {\n                                        return <option key={service.id} value={service.id}>{service.serviceName}</option>;\n                                    }\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <input className=\"form-control\" type=\"text\" required onChange={handleDescription} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Amount</label>\n                            <input className=\"form-control\" type=\"number\" required step=\"0.01\" onChange={handleAmount} />\n                            <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                                The amount has to be specified in the source account currency.\n                            </small>\n                            {invalidAmount &&\n                                <div className=\"invalid-entry\">You have to specify an amount greater than zero.</div>\n                            }\n                            {insufficientFunds &&\n                                <div className=\"invalid-entry\">You have insufficient funds.</div>\n                            }\n                        </div>\n                        {!inputDisabled &&\n                            <div className=\"form-group\">\n                                <button type=\"cancel\" className=\"btn btn-danger\" onClick={handleCancel}>Cancel</button>\n                                <button disabled={submitDisabled} type=\"button\" className=\"btn btn-success\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\" onClick={toggleDisabled}>Continue</button>\n                            </div>\n                        }\n                        <div class=\"collapse\" id=\"collapseExample\">\n                            <div class=\"card card-body\">\n                                <LabelGroup title=\"Source Account\" text={accountNumber} />\n                                <LabelGroup title=\"Service\" text={serviceId} />\n                                <LabelGroup title=\"Description\" text={description} />\n                                <LabelGroup title=\"Amount\" text={amount} />\n                                <button onClick={toggleDisabled} type=\"button\" className=\"btn btn-danger\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">Back</button>\n                                <button type=\"submit\" className=\"btn btn-success\">Pay</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewServicePayment;"]},"metadata":{},"sourceType":"module"}