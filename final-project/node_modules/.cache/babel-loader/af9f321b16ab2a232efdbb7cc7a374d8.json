{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/NewServicePayment/NewServicePayment.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Axios from 'axios';\n\nconst NewServicePayment = () => {\n  const history = useHistory();\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [serviceId, setServiceId] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [services, setServices] = useState([]);\n  const [invalidAmount, setInvalidAmount] = useState(false);\n  const [insufficientFunds, setInsufficientFunds] = useState(false);\n  const [cookies] = useCookies(['JWT']);\n\n  if (!validate(cookies.JWT)) {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    const claims = validate(cookies.JWT);\n\n    if (claims) {\n      Axios.get(`http://localhost:8081/api/v1/account/byUserId/${claims.id}`, {\n        headers: {\n          JWT: cookies.JWT\n        }\n      }).then(res => {\n        const {\n          data\n        } = res;\n        setAccounts(data);\n        setAccountNumber(data[0].accountNumber);\n      }).catch(e => {});\n      Axios.get(`http://localhost:8081/api/v1/service`, {\n        headers: {\n          JWT: cookies.JWT\n        }\n      }).then(res => {\n        const {\n          data\n        } = res;\n        setServices(data);\n        setAccountNumber(data[0].accountNumber);\n      }).catch(e => {});\n    }\n  }, [cookies]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setInsufficientFunds(false);\n    const claims = validate(cookies.JWT);\n    const validAmount = checkAmount();\n\n    if (!validAmount) {\n      validAmount ? setInvalidAmount(false) : setInvalidAmount(true);\n    } else {\n      const account = await checkAccount(accountNumber);\n      const payment = {\n        paymentNumber: Math.floor(Math.random() * 100000000 + 1000000000),\n        paymentDescription: description,\n        amount: amount,\n        currency: account.currency,\n        transferDate: new Date(),\n        userId: claims.id,\n        accountId: account.id,\n        serviceId: serviceId\n      };\n      Axios.post(`http://localhost:8081/api/v1/payment`, payment, {\n        headers: {\n          JWT: cookies.JWT\n        }\n      }).then(res => {\n        history.goBack();\n      }).catch(e => {\n        console.log(e);\n        setInsufficientFunds(true);\n      });\n    }\n  };\n\n  const checkAmount = () => {\n    if (amount > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const checkAccount = async number => {\n    let res = await Axios.get(`http://localhost:8081/api/v1/account/${number}`, {\n      headers: {\n        JWT: cookies.JWT\n      }\n    });\n    return res.data.accountNumber ? res.data : null;\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleSourceAccount = event => {\n    setAccountNumber(event.target.value);\n  };\n\n  const handleDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleAmount = event => {\n    setAmount(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"block-section container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-section-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"block-section-header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Pay Services\")), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Source Account\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"source-account\",\n    onChange: handleSourceAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, accounts.map((account, index) => {\n    if (index === 0) {\n      return React.createElement(\"option\", {\n        key: account.id,\n        value: account.accountNumber,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, account.accountNumber + \" - \" + account.balance + \" \" + account.currency);\n    } else {\n      return React.createElement(\"option\", {\n        key: account.id,\n        value: account.accountNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, account.accountNumber + \" - \" + account.balance + \" \" + account.currency);\n    }\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Service\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"service\",\n    onChange: handleSourceAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, accounts.map((service, index) => {\n    if (index === 0) {\n      return React.createElement(\"option\", {\n        key: service.id,\n        value: service.id,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, service.serviceName);\n    } else {\n      return React.createElement(\"option\", {\n        key: service.id,\n        value: service.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, service.serviceName);\n    }\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    onChange: handleDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"number\",\n    required: true,\n    step: \"0.01\",\n    onChange: handleAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"passwordHelpBlock\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"The amount has to be specified in the source account currency.\"), invalidAmount && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"You have to specify an amount greater than zero.\"), insufficientFunds && React.createElement(\"div\", {\n    className: \"invalid-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"You have insufficient funds.\")), React.createElement(\"button\", {\n    type: \"cancel\",\n    className: \"btn btn-danger\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Transfer\")))));\n};\n\nexport default NewServicePayment;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/NewServicePayment/NewServicePayment.js"],"names":["React","useState","useEffect","useCookies","useHistory","validate","Navbar","Axios","NewServicePayment","history","description","setDescription","amount","setAmount","accountNumber","setAccountNumber","serviceId","setServiceId","accounts","setAccounts","services","setServices","invalidAmount","setInvalidAmount","insufficientFunds","setInsufficientFunds","cookies","JWT","push","claims","get","id","headers","then","res","data","catch","e","handleSubmit","preventDefault","validAmount","checkAmount","account","checkAccount","payment","paymentNumber","Math","floor","random","paymentDescription","currency","transferDate","Date","userId","accountId","post","goBack","console","log","number","handleCancel","handleSourceAccount","event","target","value","handleDescription","handleAmount","map","index","balance","service","serviceName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Axios from 'axios';\n\nconst NewServicePayment = () => {\n\n    const history = useHistory();\n\n    const [description, setDescription] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [accountNumber, setAccountNumber] = useState(\"\");\n    const [serviceId, setServiceId] = useState(\"\");\n\n    const [accounts, setAccounts] = useState([]);\n    const [services, setServices] = useState([]);\n    const [invalidAmount, setInvalidAmount] = useState(false);\n    const [insufficientFunds, setInsufficientFunds] = useState(false);\n\n    const [cookies] = useCookies(['JWT']);\n\n    if (!validate(cookies.JWT)) {\n        history.push(\"/login\");\n    }\n\n    useEffect(() => {\n        const claims = validate(cookies.JWT);\n        if (claims) {\n            Axios.get(`http://localhost:8081/api/v1/account/byUserId/${claims.id}`, {\n                headers: { JWT: cookies.JWT }\n            }).then(res => {\n                const { data } = res;\n                setAccounts(data);\n                setAccountNumber(data[0].accountNumber)\n            }).catch(e => {\n\n            });\n            Axios.get(`http://localhost:8081/api/v1/service`, {\n                headers: { JWT: cookies.JWT }\n            }).then(res => {\n                const { data } = res;\n                setServices(data);\n                setAccountNumber(data[0].accountNumber)\n            }).catch(e => {\n\n            });\n        }\n    }, [cookies]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setInsufficientFunds(false);\n\n        const claims = validate(cookies.JWT);\n        const validAmount = checkAmount();\n\n        if (!validAmount) {\n            validAmount ? setInvalidAmount(false) : setInvalidAmount(true);\n        } else {\n            const account = await checkAccount(accountNumber);\n\n            const payment = {\n                paymentNumber: Math.floor((Math.random() * 100000000) + 1000000000),\n                paymentDescription: description,\n                amount: amount,\n                currency: account.currency,\n                transferDate: new Date(),\n                userId: claims.id,\n                accountId: account.id,\n                serviceId: serviceId\n            }\n\n            Axios.post(`http://localhost:8081/api/v1/payment`, payment, {\n                headers: { JWT: cookies.JWT }\n            }).then(res => {\n                history.goBack();\n            }).catch(e => {\n                console.log(e);\n                setInsufficientFunds(true);\n            });\n        }\n    }\n\n    const checkAmount = () => {\n        if (amount > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const checkAccount = async (number) => {\n        let res = await Axios.get(`http://localhost:8081/api/v1/account/${number}`, {\n            headers: {\n                JWT: cookies.JWT,\n            }\n        })\n        return res.data.accountNumber ? res.data : null;\n    };\n\n    const handleCancel = () => { history.goBack(); }\n\n    const handleSourceAccount = event => {\n        setAccountNumber(event.target.value);\n    };\n\n    const handleDescription = event => {\n        setDescription(event.target.value);\n    };\n\n    const handleAmount = event => {\n        setAmount(event.target.value);\n    };\n\n    return (\n        <div className=\"wrapper\">\n            <div id=\"content\">\n                <Navbar />\n                <div className=\"block-section container\">\n                    <div className=\"block-section-header\">\n                        <h3 className=\"block-section-header-text\">Pay Services</h3>\n                    </div>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label>Source Account</label>\n                            <select className=\"form-control\" id=\"source-account\" onChange={handleSourceAccount}>\n                                {accounts.map((account, index) => {\n                                    if (index === 0) {\n                                        return <option key={account.id} value={account.accountNumber} selected>\n                                            {account.accountNumber + \" - \" + account.balance + \" \" + account.currency}\n                                        </option>;\n                                    } else {\n                                        return <option key={account.id} value={account.accountNumber}>\n                                            {account.accountNumber + \" - \" + account.balance + \" \" + account.currency}\n                                        </option>;\n                                    }\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Service</label>\n                            <select className=\"form-control\" id=\"service\" onChange={handleSourceAccount}>\n                                {accounts.map((service, index) => {\n                                    if (index === 0) {\n                                        return <option key={service.id} value={service.id} selected>{service.serviceName}</option>;\n                                    } else {\n                                        return <option key={service.id} value={service.id}>{service.serviceName}</option>;\n                                    }\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <input className=\"form-control\" type=\"text\" required onChange={handleDescription} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Amount</label>\n                            <input className=\"form-control\" type=\"number\" required step=\"0.01\" onChange={handleAmount} />\n                            <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                                The amount has to be specified in the source account currency.\n                            </small>\n                            {invalidAmount &&\n                                <div className=\"invalid-entry\">You have to specify an amount greater than zero.</div>\n                            }\n                            {insufficientFunds &&\n                                <div className=\"invalid-entry\">You have insufficient funds.</div>\n                            }\n                        </div>\n\n                        <button type=\"cancel\" className=\"btn btn-danger\" onClick={handleCancel}>Cancel</button>\n                        <button type=\"submit\" className=\"btn btn-success\">Transfer</button>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewServicePayment;"]},"metadata":{},"sourceType":"module"}