{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Transfers/Transfers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Link, useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\n\nconst Transfers = props => {\n  const history = useHistory();\n  const {\n    accountId\n  } = props;\n  const [transfers, setTransfers] = useState([]);\n  const [cookies] = useCookies(['JWT']);\n\n  if (!validate(cookies.JWT)) {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    const claims = validate(cookies.JWT);\n\n    if (claims) {\n      Axios.get(`http://localhost:8081/api/v1/transfer/byAccountId/${accountId}`, {\n        headers: {\n          JWT: cookies.JWT\n        }\n      }).then(res => {\n        setTransfers(res.data);\n      }).catch(e => {});\n    }\n  }, [accountId, cookies]);\n  return React.createElement(\"div\", {\n    className: \"block-section container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-section-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-section-header-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/transfers/newTransfer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"New Transfer\")), React.createElement(\"h3\", {\n    className: \"block-section-header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Transfers\")), React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Amount\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, transfers.map(transfer => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, transfer.transferNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, transfer.transferDescription), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, transfer.transferDate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, transfer.amount));\n  }))));\n};\n\nexport default Transfers;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 7/final-project/src/pages/Transfers/Transfers.js"],"names":["React","useState","useEffect","useCookies","Link","useHistory","validate","Axios","Transfers","props","history","accountId","transfers","setTransfers","cookies","JWT","push","claims","get","headers","then","res","data","catch","e","map","transfer","transferNumber","transferDescription","transferDate","amount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAcF,KAApB;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACa,OAAD,IAAYX,UAAU,CAAC,CAAC,KAAD,CAAD,CAA5B;;AAEA,MAAI,CAACG,QAAQ,CAACQ,OAAO,CAACC,GAAT,CAAb,EAA4B;AACxBL,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,MAAM,GAAGX,QAAQ,CAACQ,OAAO,CAACC,GAAT,CAAvB;;AACA,QAAIE,MAAJ,EAAY;AACRV,MAAAA,KAAK,CAACW,GAAN,CAAW,qDAAoDP,SAAU,EAAzE,EAA4E;AACxEQ,QAAAA,OAAO,EAAE;AAAEJ,UAAAA,GAAG,EAAED,OAAO,CAACC;AAAf;AAD+D,OAA5E,EAEGK,IAFH,CAEQC,GAAG,IAAI;AACXR,QAAAA,YAAY,CAACQ,GAAG,CAACC,IAAL,CAAZ;AACH,OAJD,EAIGC,KAJH,CAISC,CAAC,IAAI,CACb,CALD;AAMH;AACJ,GAVQ,EAUN,CAACb,SAAD,EAAYG,OAAZ,CAVM,CAAT;AAYA,SACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ,EAOI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,CAACa,GAAV,CAAcC,QAAQ,IAAI;AACvB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACC,cAAd,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,QAAQ,CAACE,mBAAd,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACG,YAAd,CAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,QAAQ,CAACI,MAAd,CAJG,CAAP;AAMH,GAPA,CADL,CATJ,CAPJ,CADJ;AA+BH,CAzDD;;AA2DA,eAAetB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Link, useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\n\nconst Transfers = (props) => {\n\n    const history = useHistory();\n\n    const {accountId} = props;\n\n    const [transfers, setTransfers] = useState([]);\n\n    const [cookies] = useCookies(['JWT']);\n\n    if (!validate(cookies.JWT)) {\n        history.push(\"/login\");\n    }\n\n    useEffect(() => {\n        const claims = validate(cookies.JWT);\n        if (claims) {\n            Axios.get(`http://localhost:8081/api/v1/transfer/byAccountId/${accountId}`, {\n                headers: { JWT: cookies.JWT }\n            }).then(res => {\n                setTransfers(res.data)\n            }).catch(e => {\n            });\n        }\n    }, [accountId, cookies]);\n\n    return (\n        <div className=\"block-section container\">\n            <div className=\"block-section-header\">\n                <div className=\"block-section-header-edit\">\n                    <Link to=\"/transfers/newTransfer\">New Transfer</Link>\n                </div>\n                <h3 className=\"block-section-header-text\">Transfers</h3>\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Number</th>\n                        <th>Description</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {transfers.map(transfer => {\n                        return <tr>\n                            <td>{transfer.transferNumber}</td>\n                            <td>{transfer.transferDescription}</td>\n                            <td>{transfer.transferDate}</td>\n                            <td>{transfer.amount}</td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n\n}\n\nexport default Transfers;\n\n"]},"metadata":{},"sourceType":"module"}