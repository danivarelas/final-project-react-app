{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/final-project-react-app/final-project/src/pages/Transfers/Transfers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\nimport TransfersList from '../../components/TransfersList/TransfersList';\n\nconst Transfers = props => {\n  const history = useHistory();\n  const {\n    account\n  } = props;\n  const [transfersOut, setTransfersOut] = useState([]);\n  const [transfersIn, setTransfersIn] = useState([]);\n\n  if (!validate(sessionStorage.getItem('JWT'))) {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('JWT');\n    const claims = validate(token);\n\n    if (claims) {\n      if (!transfersOut.length) {\n        Axios.get(`http://localhost:8081/api/v1/transfer/byAccountId/${account.id}`, {\n          headers: {\n            JWT: token\n          }\n        }).then(res => {\n          console.log(res.data);\n          setTransfersOut(res.data);\n        }).catch(e => {});\n      }\n\n      if (!transfersIn.length) {\n        Axios.get(`http://localhost:8081/api/v1/transfer/byTargetAccountId/${account.id}`, {\n          headers: {\n            JWT: token\n          }\n        }).then(res => {\n          console.log(res.data);\n          setTransfersIn(res.data);\n        }).catch(e => {});\n      }\n    }\n  }, [account, transfersIn, transfersOut]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TransfersList, {\n    transfers: transfersOut,\n    account: account,\n    title: \"Outgoing transfers\",\n    emptyMessage: \"You haven't performed any transactions.\",\n    isOutgoing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(TransfersList, {\n    transfers: transfersIn,\n    account: account,\n    title: \"Incoming transfers\",\n    emptyMessage: \"You haven't received any transactions.\",\n    isOutgoing: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nexport default Transfers;","map":{"version":3,"sources":["/Users/user/Desktop/final-project-react-app/final-project/src/pages/Transfers/Transfers.js"],"names":["React","useState","useEffect","useHistory","validate","Axios","TransfersList","Transfers","props","history","account","transfersOut","setTransfersOut","transfersIn","setTransfersIn","sessionStorage","getItem","push","token","claims","length","get","id","headers","JWT","then","res","console","log","data","catch","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAcF,KAApB;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;;AAEA,MAAI,CAACG,QAAQ,CAACW,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAD,CAAb,EAA8C;AAC1CP,IAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACH;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,KAAK,GAAGH,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAd;AACA,UAAMG,MAAM,GAAGf,QAAQ,CAACc,KAAD,CAAvB;;AACA,QAAIC,MAAJ,EAAY;AACR,UAAI,CAACR,YAAY,CAACS,MAAlB,EAA0B;AACtBf,QAAAA,KAAK,CAACgB,GAAN,CAAW,qDAAoDX,OAAO,CAACY,EAAG,EAA1E,EAA6E;AACzEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,GAAG,EAAEN;AAAP;AADgE,SAA7E,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAjB,UAAAA,eAAe,CAACc,GAAG,CAACG,IAAL,CAAf;AACH,SALD,EAKGC,KALH,CAKSC,CAAC,IAAI,CACb,CAND;AAOH;;AACD,UAAI,CAAClB,WAAW,CAACO,MAAjB,EAAyB;AACrBf,QAAAA,KAAK,CAACgB,GAAN,CAAW,2DAA0DX,OAAO,CAACY,EAAG,EAAhF,EAAmF;AAC/EC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,GAAG,EAAEN;AAAP;AADsE,SAAnF,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAf,UAAAA,cAAc,CAACY,GAAG,CAACG,IAAL,CAAd;AACH,SALD,EAKGC,KALH,CAKSC,CAAC,IAAI,CACb,CAND;AAOH;AACJ;AACJ,GAvBQ,EAuBN,CAACrB,OAAD,EAAUG,WAAV,EAAuBF,YAAvB,CAvBM,CAAT;AAyBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,YAA1B;AAAwC,IAAA,OAAO,EAAED,OAAjD;AAA0D,IAAA,KAAK,EAAE,oBAAjE;AAAuF,IAAA,YAAY,EAAE,yCAArG;AAAgJ,IAAA,UAAU,EAAE,IAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEG,WAA1B;AAAuC,IAAA,OAAO,EAAEH,OAAhD;AAAyD,IAAA,KAAK,EAAE,oBAAhE;AAAsF,IAAA,YAAY,EAAE,wCAApG;AAA8I,IAAA,UAAU,EAAE,KAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA7CD;;AA+CA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from '../../utils/JWTParser';\nimport Axios from 'axios';\nimport TransfersList from '../../components/TransfersList/TransfersList';\n\nconst Transfers = (props) => {\n\n    const history = useHistory();\n\n    const { account } = props;\n\n    const [transfersOut, setTransfersOut] = useState([]);\n    const [transfersIn, setTransfersIn] = useState([]);\n\n    if (!validate(sessionStorage.getItem('JWT'))) {\n        history.push(\"/login\");\n    }\n\n    useEffect(() => {\n        const token = sessionStorage.getItem('JWT');\n        const claims = validate(token);\n        if (claims) {\n            if (!transfersOut.length) {\n                Axios.get(`http://localhost:8081/api/v1/transfer/byAccountId/${account.id}`, {\n                    headers: { JWT: token }\n                }).then(res => {\n                    console.log(res.data)\n                    setTransfersOut(res.data);\n                }).catch(e => {\n                });\n            }\n            if (!transfersIn.length) {\n                Axios.get(`http://localhost:8081/api/v1/transfer/byTargetAccountId/${account.id}`, {\n                    headers: { JWT: token }\n                }).then(res => {\n                    console.log(res.data)\n                    setTransfersIn(res.data);\n                }).catch(e => {\n                });\n            }\n        }\n    }, [account, transfersIn, transfersOut]);\n\n    return (\n        <div>\n            <TransfersList transfers={transfersOut} account={account} title={\"Outgoing transfers\"} emptyMessage={\"You haven't performed any transactions.\"} isOutgoing={true} />\n            <TransfersList transfers={transfersIn} account={account} title={\"Incoming transfers\"} emptyMessage={\"You haven't received any transactions.\"} isOutgoing={false} />\n        </div>\n    );\n\n}\n\nexport default Transfers;\n"]},"metadata":{},"sourceType":"module"}